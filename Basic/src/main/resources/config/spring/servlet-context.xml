<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/img/**" location="/resources/img/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!--  JungSun jungsun = new JungSun(); -->
<!-- 	<beans:bean id="jungsun" class="kr.or.basic.domain.JungSun">
	 JungSun jungsun = new JungSun(Jamba jamba);
		생성자 인젝션 : 라이브러리로 가져온 외부 클래스 파일들은 어노테이션으로 설정할 수 없으므로 xml이나 java로 직접 등록해야한다.
	<beans:constructor-arg ref="jamba"/>
	</beans:bean> -->
	
	<beans:bean id="jungsun" class="kr.or.basic.domain.JungSun">
	<beans:property name="jamba" ref="jamba"/>
<!-- 	아래 잠바 객체를 참조하는 jungsun 클래스의 jamba 변수 - setJamba -->
	</beans:bean>
	<beans:bean id="jamba" class="kr.or.basic.domain.Jamba">
	<!-- setColor(pink) -->
	<beans:property name="color" value="pink"/>
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></beans:bean>
	
	<context:component-scan base-package="kr.or.basic" />
	
	
	
</beans:beans>
