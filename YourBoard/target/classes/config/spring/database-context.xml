<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 버전이 있으면 문제될 수 있으므로 지움(특히 스프링) -->
	
	<!-- properties 파일 위치 지정 -->
	<context:property-placeholder location="classpath:config/properties/*.properties"/>
	
	<!-- 히카리 설정  -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- setDriverClassName("oracle.jdbc.driver.OracleDrive")와 동일, Setter Injection -->
		<!-- properties이름은 예약어 충돌방지를 위해 db.를 붙였음-->
 		<property name="driverClassName" value="${db.driverClassName}"/>
		<property name="jdbcUrl" value="${db.jdbcUrl}"/> 
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>	
	
	<!-- 생성자 Injection -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	<!-- MyBatis 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="configLocation" value="classpath:config/mybatisConfig.xml"></property>
    	<property name="mapperLocations" value="classpath:mapper/**/*-Mapper.xml"></property>
	</bean>
	
	<!-- Mapper 스캔할 패키지 설정 -->
	<mybatis-spring:scan base-package="kr.or.yourboard.mapper"/>

	<!-- 트랜잭션 매니저 등록 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 트랜잭션을 어노테이션으로 사용할 수 있도록 설정, 트랜잭션 매니저 필요함 -->
	<tx:annotation-driven/>

	
</beans>
